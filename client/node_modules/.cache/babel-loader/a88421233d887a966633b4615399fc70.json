{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAKgJcr3PrpWn8BOJ-xR1w5NqZg5qAfqrU\",\n  authDomain: \"ecommerce-30ec0.firebaseapp.com\",\n  databaseURL: \"https://ecommerce-30ec0.firebaseio.com\",\n  projectId: \"ecommerce-30ec0\",\n  storageBucket: \"ecommerce-30ec0.appspot.com\",\n  messagingSenderId: \"570779796009\",\n  appId: \"1:570779796009:web:5784a2bbb0baac8db5d238\",\n  measurementId: \"G-GJC8C143SR\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`/users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/lisaverhoeven/Desktop/projects/ecommerce/src/firebase/FirebaseUtils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,iCAFD;AAGXC,EAAAA,WAAW,EAAE,wCAHF;AAIXC,EAAAA,SAAS,EAAE,iBAJA;AAKXC,EAAAA,aAAa,EAAE,6BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWC,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC5E,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,UAASJ,QAAQ,CAACK,GAAI,EAArC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAqB;AACpB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBV,QAA7B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACH,YAAMV,OAAO,CAACW,GAAR,CAAY;AACjBJ,QAAAA,WADiB;AAEjBC,QAAAA,KAFiB;AAGjBC,QAAAA,SAHiB;AAIjB,WAAGV;AAJc,OAAZ,CAAN;AAMA,KAPD,CAOE,OAAMa,KAAN,EAAa;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACA;AACD;;AAED,SAAOf,OAAP;AACA,CAxBM;AA0BPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyAKgJcr3PrpWn8BOJ-xR1w5NqZg5qAfqrU\",\n    authDomain: \"ecommerce-30ec0.firebaseapp.com\",\n    databaseURL: \"https://ecommerce-30ec0.firebaseio.com\",\n    projectId: \"ecommerce-30ec0\",\n    storageBucket: \"ecommerce-30ec0.appspot.com\",\n    messagingSenderId: \"570779796009\",\n    appId: \"1:570779796009:web:5784a2bbb0baac8db5d238\",\n    measurementId: \"G-GJC8C143SR\"\n };\n\n export const createUserProfileDocument = async (userAuth, additionalData) => {\n \tif(!userAuth) return;\n\n \tconst userRef = firestore.doc(`/users/${userAuth.uid}`);\n\n \tconst snapShot = await userRef.get();\n\n \tif(!snapShot.exists) {\n \t\tconst {displayName, email} = userAuth;\n \t\tconst createdAt = new Date();\n\n \t\ttry {\n \t\t\tawait userRef.set({\n \t\t\t\tdisplayName,\n \t\t\t\temail,\n \t\t\t\tcreatedAt,\n \t\t\t\t...additionalData\n \t\t\t})\n \t\t} catch(error) {\n \t\t\tconsole.log('error creating user', error.message);\n \t\t}\n \t}\n\n \treturn userRef;\n }\n\n firebase.initializeApp(config);\n\n export const auth = firebase.auth();\n export const firestore = firebase.firestore();\n\n const provider = new firebase.auth.GoogleAuthProvider();\n provider.setCustomParameters({prompt: 'select_account'});\n export const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n export default firebase;"]},"metadata":{},"sourceType":"module"}