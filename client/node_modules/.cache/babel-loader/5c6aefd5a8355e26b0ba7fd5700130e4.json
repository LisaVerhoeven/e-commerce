{"ast":null,"code":"var _jsxFileName = \"/Users/lisaverhoeven/Desktop/projects/ecommerce/client/src/components/signin/SignIn.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../forminput/FormInput';\nimport CustomButton from '../custombutton/CustomButton';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/useractions';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './signinstyles';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SignInContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(SignInTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, \"Sign in with email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(ButtonsBarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }, \" Sign in \"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }, \" Sign in with Google \"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/lisaverhoeven/Desktop/projects/ecommerce/client/src/components/signin/SignIn.js"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {connect } from 'react-redux';\n\nimport FormInput from '../forminput/FormInput';\nimport CustomButton from '../custombutton/CustomButton';\n\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/useractions';\n\nimport {\n  SignInContainer,\n  SignInTitle,\n  ButtonsBarContainer\n} from './signinstyles';\n\nconst SignIn = ({emailSignInStart, googleSignInStart}) => {\n\tconst [userCredentials, setCredentials] = useState({ email: '', password: ''})\n\tconst { email, password } = userCredentials;\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\temailSignInStart(email, password);\n\t};\n\n\tconst handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setCredentials({...userCredentials, [name]: value });\n \t };\n\n\t\n\t\treturn(\n\t\t<SignInContainer>\n\t\t<SignInTitle>I already have an account</SignInTitle>\n\t\t<span>Sign in with email and password</span>\n\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<FormInput \n\t\t\tname='email' \n\t\t\ttype='email'\n\t\t\tvalue={email} \n\t\t\thandleChange={handleChange} \n\t\t\tlabel='email'\n\t\t\trequired\n\t\t\t/>\n\t\t\t\n\t\t\t<FormInput \n\t\t\tname=\"password\" \n\t\t\ttype=\"password\" \n\t\t\tvalue={password} \n\t\t\thandleChange={handleChange} \n\t\t\tlabel='password'\n\t\t\trequired\n\t\t\t/>\n\t\t\t\n\t\t\t<ButtonsBarContainer>\n\t\t\t<CustomButton type=\"submit\" > Sign in </CustomButton>\n\t\t\t<CustomButton type=\"button\" onClick={googleSignInStart}  isGoogleSignIn> Sign in with Google </CustomButton>\n\t\t\t</ButtonsBarContainer>\n\t\t</form>\n\t\t</SignInContainer>\n\t\t)\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}