{"ast":null,"code":"import { all, call, takeLatest, put } from 'redux-saga/effects';\nimport UserActionTypes from '../user/usertypes';\nimport { clearCart, cartFromFirebase } from './cartactions';\nimport { getUserCartRef } from '../../firebase/FirebaseUtils';\nexport function* clearCartOnSignOut() {\n  yield put(clearCart());\n}\nexport function* getCartFromFirebase({\n  payload: user\n}) {\n  try {\n    const cartDocRef = yield call(getUserCartRef, user);\n    const cartSnapshot = yield cartDocRef.get();\n\n    if (cartSnapshot.data().cart === undefined) {\n      const emptyArray = [];\n      yield put(cartFromFirebase(emptyArray));\n    } else {\n      yield put(cartFromFirebase(cartSnapshot.data().cart));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\nexport function* onUserSignIn() {\n  yield takeLatest(UserActionTypes.SIGN_IN_SUCCESS, getCartFromFirebase);\n}\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onUserSignIn)]);\n}","map":{"version":3,"sources":["/Users/lisaverhoeven/Desktop/projects/ecommerce/client/src/redux/cart/cartsagas.js"],"names":["all","call","takeLatest","put","UserActionTypes","clearCart","cartFromFirebase","getUserCartRef","clearCartOnSignOut","getCartFromFirebase","payload","user","cartDocRef","cartSnapshot","get","data","cart","undefined","emptyArray","error","console","log","onSignOutSuccess","SIGN_OUT_SUCCESS","onUserSignIn","SIGN_IN_SUCCESS","cartSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,eAA5C;AAEA,SACEC,cADF,QAEO,8BAFP;AAKA,OAAO,UAAUC,kBAAV,GAA+B;AACpC,QAAML,GAAG,CAACE,SAAS,EAAV,CAAT;AACD;AAED,OAAO,UAAUI,mBAAV,CAA8B;AAACC,EAAAA,OAAO,EAAEC;AAAV,CAA9B,EAA+C;AACrD,MAAI;AACH,UAAMC,UAAU,GAAG,MAAMX,IAAI,CAACM,cAAD,EAAiBI,IAAjB,CAA7B;AACA,UAAME,YAAY,GAAG,MAAMD,UAAU,CAACE,GAAX,EAA3B;;AACA,QAAID,YAAY,CAACE,IAAb,GAAoBC,IAApB,KAA6BC,SAAjC,EAA4C;AAC5C,YAAMC,UAAU,GAAG,EAAnB;AACA,YAAMf,GAAG,CAACG,gBAAgB,CAACY,UAAD,CAAjB,CAAT;AACC,KAHD,MAGO;AACN,YAAMf,GAAG,CAACG,gBAAgB,CAACO,YAAY,CAACE,IAAb,GAAoBC,IAArB,CAAjB,CAAT;AACA;AACD,GATD,CASE,OAAOG,KAAP,EAAc;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AAED;AAED,OAAO,UAAUG,gBAAV,GAA6B;AAClC,QAAMpB,UAAU,CAACE,eAAe,CAACmB,gBAAjB,EAAmCf,kBAAnC,CAAhB;AACD;AAED,OAAO,UAAUgB,YAAV,GAAyB;AAC/B,QAAMtB,UAAU,CAACE,eAAe,CAACqB,eAAjB,EAAkChB,mBAAlC,CAAhB;AACA;AAED,OAAO,UAAUiB,SAAV,GAAsB;AAC3B,QAAM1B,GAAG,CAAC,CAACC,IAAI,CAACqB,gBAAD,CAAL,EAAyBrB,IAAI,CAACuB,YAAD,CAA7B,CAAD,CAAT;AACD","sourcesContent":["import { all, call, takeLatest, put } from 'redux-saga/effects';\n\nimport UserActionTypes from '../user/usertypes';\nimport { clearCart, cartFromFirebase } from './cartactions';\n\nimport {\n  getUserCartRef\n} from '../../firebase/FirebaseUtils';\n\n\nexport function* clearCartOnSignOut() {\n  yield put(clearCart());\n}\n\nexport function* getCartFromFirebase({payload: user}) {\n\ttry {\n\t\tconst cartDocRef = yield call(getUserCartRef, user);\n\t\tconst cartSnapshot = yield cartDocRef.get();\n\t\tif (cartSnapshot.data().cart === undefined) {\n\t\tconst emptyArray = [];\n\t\tyield put(cartFromFirebase(emptyArray));\n\t\t} else {\n\t\t\tyield put(cartFromFirebase(cartSnapshot.data().cart));\n\t\t}\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n\t\n}\n\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\n\nexport function* onUserSignIn() {\n\tyield takeLatest(UserActionTypes.SIGN_IN_SUCCESS, getCartFromFirebase);\n}\n\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onUserSignIn)]);\n}"]},"metadata":{},"sourceType":"module"}