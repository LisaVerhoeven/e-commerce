{"ast":null,"code":"import { takeLatest, call, all, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/FirebaseUtils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shopactions';\nimport ShopActionTypes from './shoptypes';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/lisaverhoeven/Desktop/projects/ecommerce/src/redux/shop/shopsagas.js"],"names":["takeLatest","call","all","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,8BAA3D;AAEA,SACCC,uBADD,EAECC,uBAFD,QAGO,eAHP;AAKA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AAEpC,MAAI;AACF,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACL,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACI,+BAAD,EAAkCO,QAAlC,CAAjC;AACA,UAAMT,GAAG,CAACG,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACA,GALG,CAKF,OAAMC,KAAN,EAAY;AACb,UAAMZ,GAAG,CAACI,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMjB,UAAU,CAACQ,eAAe,CAACU,uBAAjB,EAA0CT,qBAA1C,CAAhB;AACA;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC5B,QAAMjB,GAAG,CAAC,CAACD,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, call, all, put } from 'redux-saga/effects';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/FirebaseUtils';\n\nimport { \n\tfetchCollectionsSuccess,\n\tfetchCollectionsFailure\n} from './shopactions'\n\nimport ShopActionTypes from './shoptypes';\n\nexport function* fetchCollectionsAsync() {\n\n     try {\t\n      \tconst collectionRef = firestore.collection('collections');\n\t\tconst snapshot = yield collectionRef.get();\n\t\tconst collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n\t\tyield put(fetchCollectionsSuccess(collectionsMap));\n\t} catch(error){\n\t\tyield put(fetchCollectionsFailure(error.message));\n\t}\n}\n\nexport function* fetchCollectionsStart() {\n\tyield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n\nexport function* shopSagas() {\n\tyield all([call(fetchCollectionsStart)]);\n}"]},"metadata":{},"sourceType":"module"}