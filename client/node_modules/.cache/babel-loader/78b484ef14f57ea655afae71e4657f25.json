{"ast":null,"code":"import { all, call, takeLatest, put } from 'redux-saga/effects';\nimport UserActionTypes from '../user/usertypes';\nimport CartActionTypes from './carttypes';\nimport { clearCart, cartFromFirebase } from './cartactions';\nimport { selectCurrentUser } from '../user/userselectors';\nimport { getUserCartRef } from '../../firebase/FirebaseUtils';\nexport function* clearCartOnSignOut() {\n  yield put(clearCart());\n}\nexport function* updateFirebaseCart() {\n  const user = yield yield call(selectCurrentUser);\n  console.log(user);\n}\nexport function* getCartFromFirebase({\n  payload: user\n}) {\n  try {\n    const cartDocRef = yield call(getUserCartRef, user);\n    const cartSnapshot = yield cartDocRef.get();\n    yield put(cartFromFirebase(cartSnapshot.data().cart));\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\nexport function* onUserSignIn() {\n  yield takeLatest(UserActionTypes.SIGN_IN_SUCCESS, getCartFromFirebase);\n}\nexport function* onCartChange() {\n  yield takeLatest([CartActionTypes.ADD_ITEM, CartActionTypes.REMOVE_ITEM, CartActionTypes.CLEAR_ITEM_FROM_CART, CartActionTypes.CLEAR_CART], updateFirebaseCart);\n}\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onCartChange), call(onUserSignIn)]);\n}","map":{"version":3,"sources":["/Users/lisaverhoeven/Desktop/projects/ecommerce/client/src/redux/cart/cartsagas.js"],"names":["all","call","takeLatest","put","UserActionTypes","CartActionTypes","clearCart","cartFromFirebase","selectCurrentUser","getUserCartRef","clearCartOnSignOut","updateFirebaseCart","user","console","log","getCartFromFirebase","payload","cartDocRef","cartSnapshot","get","data","cart","error","onSignOutSuccess","SIGN_OUT_SUCCESS","onUserSignIn","SIGN_IN_SUCCESS","onCartChange","ADD_ITEM","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","CLEAR_CART","cartSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,eAA5C;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AAEA,SACEC,cADF,QAEO,8BAFP;AAKA,OAAO,UAAUC,kBAAV,GAA+B;AACpC,QAAMP,GAAG,CAACG,SAAS,EAAV,CAAT;AACD;AAED,OAAO,UAAUK,kBAAV,GAA+B;AAEpC,QAAMC,IAAI,GAAG,MAAM,MAAMX,IAAI,CAACO,iBAAD,CAA7B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;AAED,OAAO,UAAUG,mBAAV,CAA8B;AAACC,EAAAA,OAAO,EAAEJ;AAAV,CAA9B,EAA+C;AACrD,MAAI;AACH,UAAMK,UAAU,GAAG,MAAMhB,IAAI,CAACQ,cAAD,EAAiBG,IAAjB,CAA7B;AACA,UAAMM,YAAY,GAAG,MAAMD,UAAU,CAACE,GAAX,EAA3B;AACA,UAAMhB,GAAG,CAACI,gBAAgB,CAACW,YAAY,CAACE,IAAb,GAAoBC,IAArB,CAAjB,CAAT;AACA,GAJD,CAIE,OAAOC,KAAP,EAAc;AACfT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACA;AAED;AAID,OAAO,UAAUC,gBAAV,GAA6B;AAClC,QAAMrB,UAAU,CAACE,eAAe,CAACoB,gBAAjB,EAAmCd,kBAAnC,CAAhB;AACD;AAED,OAAO,UAAUe,YAAV,GAAyB;AAC/B,QAAMvB,UAAU,CAACE,eAAe,CAACsB,eAAjB,EAAkCX,mBAAlC,CAAhB;AACA;AAED,OAAO,UAAUY,YAAV,GAAyB;AAC/B,QAAMzB,UAAU,CAAC,CAChBG,eAAe,CAACuB,QADA,EAEhBvB,eAAe,CAACwB,WAFA,EAGhBxB,eAAe,CAACyB,oBAHA,EAIhBzB,eAAe,CAAC0B,UAJA,CAAD,EAKfpB,kBALe,CAAhB;AAMA;AAED,OAAO,UAAUqB,SAAV,GAAsB;AAC3B,QAAMhC,GAAG,CAAC,CAACC,IAAI,CAACsB,gBAAD,CAAL,EAAyBtB,IAAI,CAAC0B,YAAD,CAA7B,EAA6C1B,IAAI,CAACwB,YAAD,CAAjD,CAAD,CAAT;AACD","sourcesContent":["import { all, call, takeLatest, put } from 'redux-saga/effects';\n\nimport UserActionTypes from '../user/usertypes';\nimport CartActionTypes from './carttypes';\nimport { clearCart, cartFromFirebase } from './cartactions';\nimport { selectCurrentUser } from '../user/userselectors';\n\nimport {\n  getUserCartRef\n} from '../../firebase/FirebaseUtils';\n\n\nexport function* clearCartOnSignOut() {\n  yield put(clearCart());\n}\n\nexport function* updateFirebaseCart() {\n\n  const user = yield yield call(selectCurrentUser);\n  console.log(user);\n}\n\nexport function* getCartFromFirebase({payload: user}) {\n\ttry {\n\t\tconst cartDocRef = yield call(getUserCartRef, user);\n\t\tconst cartSnapshot = yield cartDocRef.get();\n\t\tyield put(cartFromFirebase(cartSnapshot.data().cart));\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n\t\n}\n\n\n\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\n\nexport function* onUserSignIn() {\n\tyield takeLatest(UserActionTypes.SIGN_IN_SUCCESS, getCartFromFirebase);\n}\n\nexport function* onCartChange() {\n\tyield takeLatest([\n\t\tCartActionTypes.ADD_ITEM, \n\t\tCartActionTypes.REMOVE_ITEM, \n\t\tCartActionTypes.CLEAR_ITEM_FROM_CART, \n\t\tCartActionTypes.CLEAR_CART], \n\t\tupdateFirebaseCart);\n}\n\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onCartChange), call(onUserSignIn)]);\n}"]},"metadata":{},"sourceType":"module"}